{"version":3,"sources":["../src/parcel.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/* This import statement requires a peer or dev dependency on react that is fulfilled at runtime.\n * To avoid duplicate bundling of react, we do not do this inside of single-spa-react.js.\n * We also do not set up the prop types in this file to avoid requiring the user of the library\n * to have prop-types installed and in their browser bundle, since not everyone uses prop types.\n */\nimport React from 'react'\nimport {SingleSpaContext} from '../lib/single-spa-react.js'\n\nexport default class Parcel extends React.Component {\n  static defaultProps = {\n    wrapWith: 'div',\n    parcelDidMount: () => {},\n  }\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      hasError: false,\n    }\n\n    if (!props.config) {\n      throw new Error(`single-spa-react's Parcel component requires the 'config' prop to either be a parcel config or a loading function that returns a promise. See https://github.com/CanopyTax/single-spa-react`)\n    }\n  }\n  componentDidMount() {\n    this.addThingToDo('mount', () => {\n      const mountParcel = this.props.mountParcel || this.mountParcel\n      if (!mountParcel) {\n        throw new Error(`\n\t\t\t\t  <Parcel /> was not passed a mountParcel prop, nor is it rendered where mountParcel is within the React context.\n\t\t\t\t  If you are using <Parcel /> within a module that is not a single-spa application, you will need to import mountRootParcel from single-spa and pass it into <Parcel /> as a mountParcel prop\t\n\t\t\t\t`)\n      }\n      let domElement;\n      if (this.el) {\n        domElement = this.el\n      } else {\n        this.createdDomElement = domElement = document.createElement(this.props.wrapWith)\n        this.props.appendTo.appendChild(domElement)\n      }\n      this.parcel = mountParcel(this.props.config, {domElement, ...this.getParcelProps()})\n      this.parcel.mountPromise.then(this.props.parcelDidMount)\n      return this.parcel.mountPromise\n    })\n  }\n  componentDidUpdate() {\n    this.addThingToDo('update', () => {\n      if (this.parcel && this.parcel.update) {\n        return this.parcel.update(this.getParcelProps())\n      }\n    })\n  }\n  componentWillUnmount() {\n    this.addThingToDo('unmount', () => {\n      if (this.parcel && this.parcel.getStatus() === \"MOUNTED\") {\n        return this.parcel.unmount()\n      }\n    })\n\n    if (this.createdDomElement) {\n      this.createdDomElement.parentNode.removeChild(this.createdDomElement)\n    }\n\n    this.unmounted = true\n  }\n  render() {\n    if (this.props.appendTo) {\n      if (SingleSpaContext && SingleSpaContext.Consumer) {\n        return (\n          <SingleSpaContext.Consumer>\n            {(context) => {\n              this.mountParcel = context ? context.mountParcel : null\n\n              return null\n            }}\n          </SingleSpaContext.Consumer>\n        )\n      } else {\n        return null\n      }\n    } else {\n      const children = SingleSpaContext && SingleSpaContext.Consumer\n        ? (\n          <SingleSpaContext.Consumer>\n            {(context) => {\n              this.mountParcel = context ? context.mountParcel : null\n\n              return null\n            }}\n          </SingleSpaContext.Consumer>\n        )\n        : undefined\n\n      return React.createElement(this.props.wrapWith, {ref: this.handleRef}, children)\n    }\n  }\n  handleRef = el => {\n    this.el = el\n  }\n  addThingToDo = (action, thing) => {\n    if (this.state.hasError && action !== 'unmount') {\n      // In an error state, we don't do anything anymore except for unmounting\n      return\n    }\n\n    this.nextThingToDo = (this.nextThingToDo || Promise.resolve())\n      .then((...args) => {\n        if (this.unmounted && action !== 'unmount') {\n          // Never do anything once the react component unmounts\n          return\n        }\n\n        return thing(...args)\n      })\n      .catch(err => {\n        this.nextThingToDo = Promise.resolve() // reset so we don't .then() the bad promise again\n        this.setState({hasError: true})\n\n        if (err && err.message) {\n          err.message = `During '${action}', parcel threw an error: ${err.message}`\n        }\n\n        if (this.props.handleError) {\n          this.props.handleError(err)\n        } else {\n          setTimeout(() => {throw err})\n        }\n\n        // No more things to do should be done -- the parcel is in an error state\n        throw err\n      })\n  }\n  getParcelProps = () => {\n    const parcelProps = {...this.props}\n\n    delete parcelProps.mountParcel\n    delete parcelProps.config\n    delete parcelProps.wrapWith\n    delete parcelProps.appendTo\n    delete parcelProps.handleError\n    delete parcelProps.parcelDidMount\n\n    return parcelProps\n  }\n}\n"]}