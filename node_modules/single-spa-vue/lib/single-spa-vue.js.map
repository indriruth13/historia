{"version":3,"sources":["../src/single-spa-vue.js"],"names":["defaultOpts","Vue","appOptions","template","singleSpaVue","userOpts","Error","opts","mountedInstances","bootstrap","bind","mount","unmount","update","loadRootComponent","then","root","rootComponent","Promise","resolve","props","domElement","el","htmlId","name","replace","domEl","document","getElementById","createElement","id","body","appendChild","querySelector","singleSpaContainer","className","render","h","data","instance","prop","$destroy","$el","innerHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,WAAW,GAAG;AAClB;AACAC,IAAAA,GAAG,EAAE,IAFa;AAGlBC,IAAAA,UAAU,EAAE,IAHM;AAIlBC,IAAAA,QAAQ,EAAE;AAJQ,GAApB;;AAOe,WAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC7C,QAAI,QAAOA,QAAP,MAAoB,QAAxB,EAAkC;AAChC,YAAM,IAAIC,KAAJ,kDAAN;AACD;;AAED,QAAMC,IAAI,qBACLP,WADK,MAELK,QAFK,CAAV;;AAKA,QAAI,CAACE,IAAI,CAACN,GAAV,EAAe;AACb,YAAM,IAAIK,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAED,QAAI,CAACC,IAAI,CAACL,UAAV,EAAsB;AACpB,YAAM,IAAII,KAAJ,CAAU,iDAAV,CAAN;AACD,KAhB4C,CAkB7C;;;AACA,QAAIE,gBAAgB,GAAG,EAAvB;AAEA,WAAO;AACLC,MAAAA,SAAS,EAAEA,SAAS,CAACC,IAAV,CAAe,IAAf,EAAqBH,IAArB,EAA2BC,gBAA3B,CADN;AAELG,MAAAA,KAAK,EAAEA,KAAK,CAACD,IAAN,CAAW,IAAX,EAAiBH,IAAjB,EAAuBC,gBAAvB,CAFF;AAGLI,MAAAA,OAAO,EAAEA,OAAO,CAACF,IAAR,CAAa,IAAb,EAAmBH,IAAnB,EAAyBC,gBAAzB,CAHJ;AAILK,MAAAA,MAAM,EAAEA,MAAM,CAACH,IAAP,CAAY,IAAZ,EAAkBH,IAAlB,EAAwBC,gBAAxB;AAJH,KAAP;AAMD;;AAED,WAASC,SAAT,CAAmBF,IAAnB,EAAyB;AACvB,QAAIA,IAAI,CAACO,iBAAT,EAA4B;AAC1B,aAAOP,IAAI,CAACO,iBAAL,GAAyBC,IAAzB,CAA8B,UAAAC,IAAI;AAAA,eAAIT,IAAI,CAACU,aAAL,GAAqBD,IAAzB;AAAA,OAAlC,CAAP;AACD,KAFD,MAEO;AACL,aAAOE,OAAO,CAACC,OAAR,EAAP;AACD;AACF;;AAED,WAASR,KAAT,CAAeJ,IAAf,EAAqBC,gBAArB,EAAuCY,KAAvC,EAA8C;AAC5C,WAAOF,OAAO,CACXC,OADI,GAEJJ,IAFI,CAEC,YAAM;AACV,UAAMb,UAAU,qBAAOK,IAAI,CAACL,UAAZ,CAAhB;;AACA,UAAIkB,KAAK,CAACC,UAAN,IAAoB,CAACnB,UAAU,CAACoB,EAApC,EAAwC;AACtCpB,QAAAA,UAAU,CAACoB,EAAX,GAAgBF,KAAK,CAACC,UAAtB;AACD;;AAED,UAAI,CAACnB,UAAU,CAACoB,EAAhB,EAAoB;AAClB,YAAMC,MAAM,oCAA6BH,KAAK,CAACI,IAAnC,CAAZ;AACAtB,QAAAA,UAAU,CAACoB,EAAX,cAAoBC,MAAM,CAACE,OAAP,CAAe,GAAf,EAAoB,KAApB,CAApB;AACA,YAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwBL,MAAxB,CAAZ;;AACA,YAAI,CAACG,KAAL,EAAY;AACVA,UAAAA,KAAK,GAAGC,QAAQ,CAACE,aAAT,CAAuB,KAAvB,CAAR;AACAH,UAAAA,KAAK,CAACI,EAAN,GAAWP,MAAX;AACAI,UAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,KAA1B;AACD,SARiB,CAUlB;AACA;AACA;;;AACA,YAAI,CAACA,KAAK,CAACO,aAAN,CAAoB,uBAApB,CAAL,EAAmD;AACjD,cAAMC,kBAAkB,GAAGP,QAAQ,CAACE,aAAT,CAAuB,KAAvB,CAA3B;AACAK,UAAAA,kBAAkB,CAACC,SAAnB,GAA+B,sBAA/B;AACAT,UAAAA,KAAK,CAACM,WAAN,CAAkBE,kBAAlB;AACD;;AAED1B,QAAAA,gBAAgB,CAACkB,KAAjB,GAAyBA,KAAzB;AACD;;AAED,UAAI,CAACxB,UAAU,CAACkC,MAAZ,IAAsB,CAAClC,UAAU,CAACC,QAAlC,IAA8CI,IAAI,CAACU,aAAvD,EAAsE;AACpEf,QAAAA,UAAU,CAACkC,MAAX,GAAoB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAAC9B,IAAI,CAACU,aAAN,CAAR;AAAA,SAApB;AACD;;AAED,UAAI,CAACf,UAAU,CAACoC,IAAhB,EAAsB;AACpBpC,QAAAA,UAAU,CAACoC,IAAX,GAAkB,EAAlB;AACD;;AAEDpC,MAAAA,UAAU,CAACoC,IAAX,qBAAsBpC,UAAU,CAACoC,IAAjC,MAA0ClB,KAA1C;AAEAZ,MAAAA,gBAAgB,CAAC+B,QAAjB,GAA4B,IAAIhC,IAAI,CAACN,GAAT,CAAaC,UAAb,CAA5B;;AACA,UAAIM,gBAAgB,CAAC+B,QAAjB,CAA0B7B,IAA9B,EAAoC;AAClCF,QAAAA,gBAAgB,CAAC+B,QAAjB,GAA4B/B,gBAAgB,CAAC+B,QAAjB,CAA0B7B,IAA1B,CAA+BF,gBAAgB,CAAC+B,QAAhD,CAA5B;AACD;AACF,KA5CI,CAAP;AA6CD;;AAED,WAAS1B,MAAT,CAAgBN,IAAhB,EAAsBC,gBAAtB,EAAwCY,KAAxC,EAA+C;AAC7C,WAAOF,OAAO,CAACC,OAAR,GAAkBJ,IAAlB,CAAuB,YAAM;AAClC,UAAMuB,IAAI,qBACJ/B,IAAI,CAACL,UAAL,CAAgBoC,IAAhB,IAAwB,EADpB,MAELlB,KAFK,CAAV;;AAIA,WAAK,IAAIoB,IAAT,IAAiBF,IAAjB,EAAuB;AACrB9B,QAAAA,gBAAgB,CAAC+B,QAAjB,CAA0BC,IAA1B,IAAkCF,IAAI,CAACE,IAAD,CAAtC;AACD;AACF,KARM,CAAP;AASD;;AAED,WAAS5B,OAAT,CAAiBL,IAAjB,EAAuBC,gBAAvB,EAAyC;AACvC,WAAOU,OAAO,CACXC,OADI,GAEJJ,IAFI,CAEC,YAAM;AACVP,MAAAA,gBAAgB,CAAC+B,QAAjB,CAA0BE,QAA1B;AACAjC,MAAAA,gBAAgB,CAAC+B,QAAjB,CAA0BG,GAA1B,CAA8BC,SAA9B,GAA0C,EAA1C;AACA,aAAOnC,gBAAgB,CAAC+B,QAAxB;;AAEA,UAAI/B,gBAAgB,CAACkB,KAArB,EAA4B;AAC1BlB,QAAAA,gBAAgB,CAACkB,KAAjB,CAAuBiB,SAAvB,GAAmC,EAAnC;AACA,eAAOnC,gBAAgB,CAACkB,KAAxB;AACD;AACF,KAXI,CAAP;AAYD","sourcesContent":["const defaultOpts = {\n  // required opts\n  Vue: null,\n  appOptions: null,\n  template: null,\n}\n\nexport default function singleSpaVue(userOpts) {\n  if (typeof userOpts !== 'object') {\n    throw new Error(`single-spa-vue requires a configuration object`);\n  }\n\n  const opts = {\n    ...defaultOpts,\n    ...userOpts,\n  };\n\n  if (!opts.Vue) {\n    throw new Error('single-spa-vuejs must be passed opts.Vue');\n  }\n\n  if (!opts.appOptions) {\n    throw new Error('single-spa-vuejs must be passed opts.appOptions');\n  }\n\n  // Just a shared object to store the mounted object state\n  let mountedInstances = {};\n\n  return {\n    bootstrap: bootstrap.bind(null, opts, mountedInstances),\n    mount: mount.bind(null, opts, mountedInstances),\n    unmount: unmount.bind(null, opts, mountedInstances),\n    update: update.bind(null, opts, mountedInstances),\n  };\n}\n\nfunction bootstrap(opts) {\n  if (opts.loadRootComponent) {\n    return opts.loadRootComponent().then(root => opts.rootComponent = root)\n  } else {\n    return Promise.resolve();\n  }\n}\n\nfunction mount(opts, mountedInstances, props) {\n  return Promise\n    .resolve()\n    .then(() => {\n      const appOptions = {...opts.appOptions}\n      if (props.domElement && !appOptions.el) {\n        appOptions.el = props.domElement;\n      }\n\n      if (!appOptions.el) {\n        const htmlId = `single-spa-application:${props.name}`\n        appOptions.el = `#${htmlId.replace(':', '\\\\:')} .single-spa-container`\n        let domEl = document.getElementById(htmlId)\n        if (!domEl) {\n          domEl = document.createElement('div')\n          domEl.id = htmlId\n          document.body.appendChild(domEl)\n        }\n\n        // single-spa-vue@>=2 always REPLACES the `el` instead of appending to it.\n        // We want domEl to stick around and not be replaced. So we tell Vue to mount\n        // into a container div inside of the main domEl\n        if (!domEl.querySelector('.single-spa-container')) {\n          const singleSpaContainer = document.createElement('div')\n          singleSpaContainer.className = 'single-spa-container'\n          domEl.appendChild(singleSpaContainer)\n        }\n\n        mountedInstances.domEl = domEl\n      }\n\n      if (!appOptions.render && !appOptions.template && opts.rootComponent) {\n        appOptions.render = (h) => h(opts.rootComponent)\n      }\n\n      if (!appOptions.data) {\n        appOptions.data = {}\n      }\n\n      appOptions.data = {...appOptions.data, ...props}\n\n      mountedInstances.instance = new opts.Vue(appOptions);\n      if (mountedInstances.instance.bind) {\n        mountedInstances.instance = mountedInstances.instance.bind(mountedInstances.instance);\n      }\n    })\n}\n\nfunction update(opts, mountedInstances, props) {\n  return Promise.resolve().then(() => {\n    const data = {\n      ...(opts.appOptions.data || {}),\n      ...props,\n    };\n    for (let prop in data) {\n      mountedInstances.instance[prop] = data[prop];\n    }\n  })\n}\n\nfunction unmount(opts, mountedInstances) {\n  return Promise\n    .resolve()\n    .then(() => {\n      mountedInstances.instance.$destroy();\n      mountedInstances.instance.$el.innerHTML = '';\n      delete mountedInstances.instance;\n\n      if (mountedInstances.domEl) {\n        mountedInstances.domEl.innerHTML = ''\n        delete mountedInstances.domEl\n      }\n    })\n}\n"],"file":"single-spa-vue.js"}