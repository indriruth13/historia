{"version":3,"sources":["../src/single-spa-vue.js"],"names":["singleSpaVue","defaultOpts","Vue","appOptions","template","userOpts","Error","opts","mountedInstances","bootstrap","bind","mount","unmount","update","loadRootComponent","then","rootComponent","root","Promise","resolve","props","otherOptions","domElement","el","htmlId","name","replace","domEl","document","getElementById","createElement","id","body","appendChild","render","h","options","data","instance","prop","$destroy","$el","innerHTML"],"mappings":"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","file":"single-spa-vue.js","sourcesContent":["const defaultOpts = {\n  // required opts\n  Vue: null,\n  appOptions: null,\n  template: null,\n}\n\nexport default function singleSpaVue(userOpts) {\n  if (typeof userOpts !== 'object') {\n    throw new Error(`single-spa-vue requires a configuration object`);\n  }\n\n  const opts = {\n    ...defaultOpts,\n    ...userOpts,\n  };\n\n  if (!opts.Vue) {\n    throw new Error('single-spa-vuejs must be passed opts.Vue');\n  }\n\n  if (!opts.appOptions) {\n    throw new Error('single-spa-vuejs must be passed opts.appOptions');\n  }\n\n  // Just a shared object to store the mounted object state\n  let mountedInstances = {};\n\n  return {\n    bootstrap: bootstrap.bind(null, opts, mountedInstances),\n    mount: mount.bind(null, opts, mountedInstances),\n    unmount: unmount.bind(null, opts, mountedInstances),\n    update: update.bind(null, opts, mountedInstances),\n  };\n}\n\nfunction bootstrap(opts) {\n  if (opts.loadRootComponent) {\n    return opts.loadRootComponent().then(root => opts.rootComponent = root)\n  } else {\n    return Promise.resolve();\n  }\n}\n\nfunction mount(opts, mountedInstances, props) {\n  return Promise\n    .resolve()\n    .then(() => {\n      const otherOptions = {}\n      if (props.domElement && !opts.appOptions.el) {\n        otherOptions.el = props.domElement;\n      }\n\n      if (!otherOptions.el) {\n        const htmlId = `single-spa-application:${props.name}`\n        otherOptions.el = `#${htmlId.replace(':', '\\\\:')}`\n        let domEl = document.getElementById(htmlId)\n        if (!domEl) {\n          domEl = document.createElement('div')\n          domEl.id = htmlId\n          document.body.appendChild(domEl)\n        }\n      }\n\n      if (!opts.appOptions.render && !opts.appOptions.template && opts.rootComponent) {\n        otherOptions.render = (h) => h(opts.rootComponent)\n      }\n\n      const options = {\n        ...opts.appOptions,\n        ...otherOptions,\n        data: {\n          ...(opts.appOptions.data || {}),\n          ...props,\n        },\n      }\n\n      mountedInstances.instance = new opts.Vue(options);\n      if (mountedInstances.instance.bind) {\n        mountedInstances.instance = mountedInstances.instance.bind(mountedInstances.instance);\n      }\n    })\n}\n\nfunction update(opts, mountedInstances, props) {\n  return new Promise(resolve => {\n    const data = {\n      ...(opts.appOptions.data || {}),\n      ...props,\n    };\n    for (let prop in data) {\n      mountedInstances.instance[prop] = data[prop];\n    }\n    resolve();\n  })\n}\n\nfunction unmount(opts, mountedInstances) {\n  return Promise\n    .resolve()\n    .then(() => {\n      mountedInstances.instance.$destroy();\n      mountedInstances.instance.$el.innerHTML = '';\n      delete mountedInstances.instance;\n    })\n}\n"]}